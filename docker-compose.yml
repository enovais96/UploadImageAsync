version: '3.3'
services:
  mysql:
    image: mysql:8.0
    container_name: upload-image-async-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: upload_image_async
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: upload-image-async-zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
      image: confluentinc/cp-kafka:latest
      container_name: upload-image-async-kafka
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: upload-image-async-zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://upload-image-async-kafka:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  app:
    build: .
    container_name: upload-image-async-service
    restart: always
    depends_on:
      - mysql
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/upload_image_async
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    command: ["java", "-jar", "app.jar"]

volumes:
  mysql_data: